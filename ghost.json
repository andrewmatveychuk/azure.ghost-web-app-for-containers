{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "17974354022369813411"
    }
  },
  "parameters": {
    "applicationNamePrefix": {
      "type": "string",
      "defaultValue": "ghost",
      "metadata": {
        "description": "Prefix to use when creating the resources in this deployment."
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "metadata": {
        "description": "App Service Plan pricing tier"
      }
    },
    "logAnalyticsWorkspaceSku": {
      "type": "string",
      "defaultValue": "PerGB2018",
      "metadata": {
        "description": "Log Analytics workspace pricing tier"
      }
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account pricing tier"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy the resources"
      }
    },
    "mySQLServerSku": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "metadata": {
        "description": "MySQL server SKU"
      }
    },
    "databasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "MySQL server password"
      }
    },
    "ghostContainerName": {
      "type": "string",
      "defaultValue": "andrewmatveychuk/ghost-ai:latest",
      "metadata": {
        "description": "Ghost container full image name and tag"
      }
    },
    "containerRegistryUrl": {
      "type": "string",
      "defaultValue": "https://index.docker.io/v1",
      "metadata": {
        "description": "Container registry where the image is hosted"
      }
    },
    "deploymentConfiguration": {
      "type": "string",
      "defaultValue": "Web app with Azure CDN",
      "allowedValues": [
        "Web app with Azure CDN",
        "Web app with Azure Front Door"
      ]
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/26",
      "metadata": {
        "description": "Virtual network address prefix to use"
      }
    },
    "webAppIntegrationSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Address prefix for web app integration subnet"
      }
    },
    "privateEndpointsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.16/28",
      "metadata": {
        "description": "Address prefix for private links subnet"
      }
    }
  },
  "variables": {
    "vNetName": "[format('{0}-vnet-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "privateEndpointsSubnetName": "privateEndpointsSubnet",
    "webAppIntegrationSubnetName": "webAppIntegrationSubnet",
    "webAppName": "[format('{0}-web-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('{0}-asp-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "logAnalyticsWorkspaceName": "[format('{0}-la-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "applicationInsightsName": "[format('{0}-ai-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "keyVaultName": "[format('{0}-kv-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "storageAccountName": "[format('{0}stor{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "mySQLServerName": "[format('{0}-mysql-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "databaseLogin": "ghost",
    "databaseName": "ghost",
    "ghostContentFileShareName": "contentfiles",
    "ghostContentFilesMountPath": "/var/lib/ghost/content_files",
    "siteUrl": "[if(equals(parameters('deploymentConfiguration'), 'Web app with Azure Front Door'), format('https://{0}.azurefd.net', variables('frontDoorName')), format('https://{0}.azureedge.net', variables('cdnEndpointName')))]",
    "cdnProfileName": "[format('{0}-cdnp-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "cdnEndpointName": "[format('{0}-cdne-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "cdnProfileSku": {
      "name": "Standard_Microsoft"
    },
    "frontDoorName": "[format('{0}-fd-{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]",
    "wafPolicyName": "[format('{0}waf{1}', parameters('applicationNamePrefix'), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vNetDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vNetName": {
            "value": "[variables('vNetName')]"
          },
          "vNetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "privateEndpointsSubnetName": {
            "value": "[variables('privateEndpointsSubnetName')]"
          },
          "privateEndpointsSubnetPrefix": {
            "value": "[parameters('privateEndpointsSubnetPrefix')]"
          },
          "webAppIntegrationSubnetName": {
            "value": "[variables('webAppIntegrationSubnetName')]"
          },
          "webAppIntegrationSubnetPrefix": {
            "value": "[parameters('webAppIntegrationSubnetPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "13276601988336369726"
            }
          },
          "parameters": {
            "vNetName": {
              "type": "string",
              "minLength": 2,
              "maxLength": 64
            },
            "vNetAddressPrefix": {
              "type": "string"
            },
            "webAppIntegrationSubnetName": {
              "type": "string"
            },
            "webAppIntegrationSubnetPrefix": {
              "type": "string"
            },
            "privateEndpointsSubnetName": {
              "type": "string"
            },
            "privateEndpointsSubnetPrefix": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-01-01",
              "name": "[parameters('vNetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vNetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('webAppIntegrationSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('webAppIntegrationSubnetPrefix')]",
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[parameters('privateEndpointsSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('privateEndpointsSubnetPrefix')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalyticsWorkspaceDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "logAnalyticsWorkspaceSku": {
            "value": "[parameters('logAnalyticsWorkspaceSku')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "13473061345376051581"
            }
          },
          "parameters": {
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "minLength": 4,
              "maxLength": 63,
              "metadata": {
                "description": "Log Analytics workspace name"
              }
            },
            "logAnalyticsWorkspaceSku": {
              "type": "string",
              "allowedValues": [
                "PerGB2018"
              ],
              "metadata": {
                "description": "Log Analytics workspace pricing tier"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('logAnalyticsWorkspaceSku')]"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccountDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageAccountSku": {
            "value": "[parameters('storageAccountSku')]"
          },
          "fileShareFolderName": {
            "value": "[variables('ghostContentFileShareName')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vNetName": {
            "value": "[variables('vNetName')]"
          },
          "privateEndpointsSubnetName": {
            "value": "[variables('privateEndpointsSubnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "4751577130592396654"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 24
            },
            "storageAccountSku": {
              "type": "string",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
              ]
            },
            "fileShareFolderName": {
              "type": "string",
              "metadata": {
                "description": "File share to store Ghost content files"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            },
            "vNetName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network for a private endpoint"
              }
            },
            "privateEndpointsSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Target subnet to create a private endpoint"
              }
            }
          },
          "variables": {
            "privateEndpointName": "[format('ghost-pl-file-{0}', uniqueString(resourceGroup().id))]",
            "privateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
            "pvtEndpointDnsGroupName": "[format('{0}/file', variables('privateEndpointName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "[parameters('storageAccountSku')]"
              },
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "publicNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "StorageAccountDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/fileServices/{1}', parameters('storageAccountName'), 'default')]",
              "name": "FileServicesDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "StorageRead",
                    "enabled": true
                  },
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  },
                  {
                    "category": "StorageDelete",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('fileShareFolderName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), format('{0}-link', variables('privateDnsZoneName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('pvtEndpointDnsGroupName')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "fileShareFullName": {
              "type": "string",
              "value": "[parameters('fileShareFolderName')]"
            },
            "accessKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "keyVaultSecretName": {
            "value": "databasePassword"
          },
          "keyVaultSecretValue": {
            "value": "[parameters('databasePassword')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "servicePrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.principalId.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vNetName": {
            "value": "[variables('vNetName')]"
          },
          "privateEndpointsSubnetName": {
            "value": "[variables('privateEndpointsSubnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "16736757807956809115"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 24,
              "metadata": {
                "description": "Key Vault name"
              }
            },
            "keyVaultSecretName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 127,
              "metadata": {
                "description": "Secret name to store"
              }
            },
            "keyVaultSecretValue": {
              "type": "securestring",
              "metadata": {
                "description": "Secret value to store"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            },
            "servicePrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Service principal ID to provide access to the vault secrets"
              }
            },
            "vNetName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network for a private endpoint"
              }
            },
            "privateEndpointsSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Target subnet to create a private endpoint"
              }
            }
          },
          "variables": {
            "privateEndpointName": "[format('ghost-pl-kv-{0}', uniqueString(resourceGroup().id))]",
            "privateDnsZoneName": "privatelink.vaultcore.azure.net",
            "pvtEndpointDnsGroupName": "[format('{0}/keyvault', variables('privateEndpointName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('servicePrincipalId')]",
                    "permissions": {
                      "secrets": [
                        "get"
                      ]
                    }
                  }
                ],
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "bypass": "None"
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
              "properties": {
                "value": "[parameters('keyVaultSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "KeyVaultDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "AuditEvent",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), format('{0}-link', variables('privateDnsZoneName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('pvtEndpointDnsGroupName')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
              ]
            }
          ],
          "outputs": {
            "databasePasswordSecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2024-04-01-preview').secretUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'webAppDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "webAppDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppName": {
            "value": "[variables('webAppName')]"
          },
          "appServicePlanId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlanDeploy'), '2022-09-01').outputs.id.value]"
          },
          "ghostContainerImage": {
            "value": "[parameters('ghostContainerName')]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccountDeploy'), '2022-09-01').outputs.name.value]"
          },
          "storageAccountAccessKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccountDeploy'), '2022-09-01').outputs.accessKey.value]"
          },
          "fileShareName": {
            "value": "[variables('ghostContentFileShareName')]"
          },
          "containerMountPath": {
            "value": "[variables('ghostContentFilesMountPath')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "deploymentConfiguration": {
            "value": "[parameters('deploymentConfiguration')]"
          },
          "vNetName": {
            "value": "[variables('vNetName')]"
          },
          "webAppIntegrationSubnetName": {
            "value": "[variables('webAppIntegrationSubnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "415296617527667493"
            }
          },
          "parameters": {
            "webAppName": {
              "type": "string",
              "minLength": 2,
              "maxLength": 60
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "App Service Plan id to host the app"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            },
            "ghostContainerImage": {
              "type": "string",
              "metadata": {
                "description": "Ghost container full image name and tag"
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage account name to store Ghost content files"
              }
            },
            "storageAccountAccessKey": {
              "type": "securestring"
            },
            "fileShareName": {
              "type": "string",
              "metadata": {
                "description": "File share name on the storage account to store Ghost content files"
              }
            },
            "containerMountPath": {
              "type": "string",
              "metadata": {
                "description": "Path to mount the file share in the container"
              }
            },
            "deploymentConfiguration": {
              "type": "string",
              "allowedValues": [
                "Web app with Azure CDN",
                "Web app with Azure Front Door"
              ]
            },
            "vNetName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network for a private endpoint"
              }
            },
            "webAppIntegrationSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Target subnet to integrate web app"
              }
            }
          },
          "variables": {
            "containerImageReference": "[format('DOCKER|{0}', parameters('ghostContainerImage'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-12-01",
              "name": "[parameters('webAppName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "enabled": true,
                "reserved": true,
                "siteConfig": {
                  "http20Enabled": true,
                  "httpLoggingEnabled": true,
                  "minTlsVersion": "1.3",
                  "ftpsState": "Disabled",
                  "linuxFxVersion": "[variables('containerImageReference')]",
                  "alwaysOn": true,
                  "use32BitWorkerProcess": false,
                  "azureStorageAccounts": {
                    "ContentFilesVolume": {
                      "type": "AzureFiles",
                      "accountName": "[parameters('storageAccountName')]",
                      "shareName": "[parameters('fileShareName')]",
                      "mountPath": "[parameters('containerMountPath')]",
                      "accessKey": "[parameters('storageAccountAccessKey')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('deploymentConfiguration'), 'Web app with Azure Front Door')]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('webAppName'), 'web')]",
              "properties": {
                "ipSecurityRestrictions": [
                  {
                    "ipAddress": "AzureFrontDoor.Backend",
                    "action": "Allow",
                    "tag": "ServiceTag",
                    "priority": 300,
                    "name": "Access from Azure Front Door",
                    "description": "Rule for access from Azure Front Door"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/networkConfig",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('webAppName'), 'virtualNetwork')]",
              "properties": {
                "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('webAppIntegrationSubnetName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('webAppName'))]",
              "name": "WebAppDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceIPSecAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServicePlatformLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('webAppName')]"
            },
            "hostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2023-12-01').hostNames[0]]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2023-12-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appServicePlanDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageAccountDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "webAppSettingsDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationInsightsDeploy'), '2022-09-01').outputs.ConnectionString.value]"
          },
          "applicationInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationInsightsDeploy'), '2022-09-01').outputs.InstrumentationKey.value]"
          },
          "containerRegistryUrl": {
            "value": "[parameters('containerRegistryUrl')]"
          },
          "containerMountPath": {
            "value": "[variables('ghostContentFilesMountPath')]"
          },
          "databaseHostFQDN": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mySQLServerDeploy'), '2022-09-01').outputs.fullyQualifiedDomainName.value]"
          },
          "databaseLogin": {
            "value": "[variables('databaseLogin')]"
          },
          "databasePasswordSecretUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy'), '2022-09-01').outputs.databasePasswordSecretUri.value]"
          },
          "databaseName": {
            "value": "[variables('databaseName')]"
          },
          "siteUrl": {
            "value": "[variables('siteUrl')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "15634036890596425162"
            }
          },
          "parameters": {
            "webAppName": {
              "type": "string"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string"
            },
            "applicationInsightsConnectionString": {
              "type": "string"
            },
            "databaseHostFQDN": {
              "type": "string",
              "metadata": {
                "description": "MySQL server hostname"
              }
            },
            "databaseName": {
              "type": "string",
              "metadata": {
                "description": "Ghost datbase name"
              }
            },
            "databaseLogin": {
              "type": "string",
              "metadata": {
                "description": "Ghost database user name"
              }
            },
            "databasePasswordSecretUri": {
              "type": "string",
              "metadata": {
                "description": "Ghost database user password"
              }
            },
            "siteUrl": {
              "type": "string",
              "metadata": {
                "description": "Website URL to autogenerate links by Ghost"
              }
            },
            "containerMountPath": {
              "type": "string",
              "metadata": {
                "description": "Mount path for Ghost content files"
              }
            },
            "containerRegistryUrl": {
              "type": "string",
              "metadata": {
                "description": "Container registry to pull Ghost docker image"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('webAppName'), 'appsettings')]",
              "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('applicationInsightsInstrumentationKey')]",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('applicationInsightsConnectionString')]",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "XDT_MicrosoftApplicationInsights_Mode": "default",
                "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false",
                "DOCKER_REGISTRY_SERVER_URL": "[parameters('containerRegistryUrl')]",
                "NODE_ENV": "production",
                "GHOST_CONTENT": "[parameters('containerMountPath')]",
                "paths__contentPath": "[parameters('containerMountPath')]",
                "privacy_useUpdateCheck": "false",
                "url": "[parameters('siteUrl')]",
                "database__client": "mysql",
                "database__connection__host": "[parameters('databaseHostFQDN')]",
                "database__connection__user": "[parameters('databaseLogin')]",
                "database__connection__password": "[format('@Microsoft.KeyVault(SecretUri={0})', parameters('databasePasswordSecretUri'))]",
                "database__connection__database": "[parameters('databaseName')]",
                "database__connection__ssl__ca": "-----BEGIN CERTIFICATE-----\r\nMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\r\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\r\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\r\nQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\r\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\r\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\r\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\r\nCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\r\nnh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\r\n43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\r\nT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\r\ngdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\r\nBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\r\nTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\r\nDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\r\nhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\r\n06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\r\nPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\r\nYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\r\nCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\r\n-----END CERTIFICATE-----"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'applicationInsightsDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'mySQLServerDeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'webAppDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appServicePlanDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanSku": {
            "value": "[parameters('appServicePlanSku')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "16756395164030632634"
            }
          },
          "parameters": {
            "appServicePlanName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "metadata": {
                "description": "App Service Plan name"
              }
            },
            "appServicePlanSku": {
              "type": "string",
              "allowedValues": [
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1v2",
                "P2v2",
                "P3v2"
              ],
              "metadata": {
                "description": "App Service Plan pricing tier"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-12-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "[parameters('appServicePlanSku')]"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/serverfarms/{0}', parameters('appServicePlanName'))]",
              "name": "AppServicePlanDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "applicationInsightsDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationInsightsName": {
            "value": "[variables('applicationInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "16407146013265302405"
            }
          },
          "parameters": {
            "applicationInsightsName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 260,
              "metadata": {
                "description": "Application Insights name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Insights/components/{0}', parameters('applicationInsightsName'))]",
              "name": "InsightsDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "AppAvailabilityResults",
                    "enabled": true
                  },
                  {
                    "category": "AppBrowserTimings",
                    "enabled": true
                  },
                  {
                    "category": "AppEvents",
                    "enabled": true
                  },
                  {
                    "category": "AppMetrics",
                    "enabled": true
                  },
                  {
                    "category": "AppDependencies",
                    "enabled": true
                  },
                  {
                    "category": "AppExceptions",
                    "enabled": true
                  },
                  {
                    "category": "AppPageViews",
                    "enabled": true
                  },
                  {
                    "category": "AppPerformanceCounters",
                    "enabled": true
                  },
                  {
                    "category": "AppRequests",
                    "enabled": true
                  },
                  {
                    "category": "AppSystemEvents",
                    "enabled": true
                  },
                  {
                    "category": "AppTraces",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
              ]
            }
          ],
          "outputs": {
            "InstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            "ConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mySQLServerDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "administratorLogin": {
            "value": "[variables('databaseLogin')]"
          },
          "administratorPassword": {
            "value": "[parameters('databasePassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "mySQLServerName": {
            "value": "[variables('mySQLServerName')]"
          },
          "mySQLServerSku": {
            "value": "[parameters('mySQLServerSku')]"
          },
          "vNetName": {
            "value": "[variables('vNetName')]"
          },
          "privateEndpointsSubnetName": {
            "value": "[variables('privateEndpointsSubnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "16695314290839249604"
            }
          },
          "parameters": {
            "mySQLServerName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 63
            },
            "mySQLServerSku": {
              "type": "string",
              "allowedValues": [
                "Standard_B1ms",
                "Standard_B2ms"
              ]
            },
            "administratorLogin": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Database administrator login name"
              }
            },
            "administratorPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Database administrator password"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            },
            "vNetName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network for a private endpoint"
              }
            },
            "privateEndpointsSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Target subnet to create a private endpoint"
              }
            }
          },
          "variables": {
            "privateEndpointName": "[format('ghost-pl-mysql-{0}', uniqueString(resourceGroup().id))]",
            "privateDnsZoneName": "privatelink.mysql.database.azure.com",
            "pvtEndpointDnsGroupName": "[format('{0}/mysql', variables('privateEndpointName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DBforMySQL/flexibleServers",
              "apiVersion": "2023-12-30",
              "name": "[parameters('mySQLServerName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('mySQLServerSku')]",
                "tier": "Burstable"
              },
              "properties": {
                "createMode": "Default",
                "version": "8.0.21",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorPassword')]",
                "network": {
                  "publicNetworkAccess": "Disabled"
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DBforMySQL/flexibleServers/{0}', parameters('mySQLServerName'))]",
              "name": "MySQLServerDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "MySqlSlowLogs",
                    "enabled": true
                  },
                  {
                    "category": "MySqlAuditLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('mySQLServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('mySQLServerName'))]",
                      "groupIds": [
                        "mysqlServer"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('mySQLServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), format('{0}-link', variables('privateDnsZoneName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('pvtEndpointDnsGroupName')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('mySQLServerName')]"
            },
            "fullyQualifiedDomainName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('mySQLServerName')), '2023-12-30').fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNetDeploy')]"
      ]
    },
    {
      "condition": "[equals(parameters('deploymentConfiguration'), 'Web app with Azure CDN')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cdnEndPointDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cdnProfileName": {
            "value": "[variables('cdnProfileName')]"
          },
          "cdnProfileSku": {
            "value": "[variables('cdnProfileSku')]"
          },
          "cdnEndpointName": {
            "value": "[variables('cdnEndpointName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "webAppName": {
            "value": "webAppDeploy"
          },
          "webAppHostName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.hostName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "12494414591420763910"
            }
          },
          "parameters": {
            "cdnProfileName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 260,
              "metadata": {
                "description": "CDN Profile name"
              }
            },
            "cdnProfileSku": {
              "type": "object",
              "metadata": {
                "description": "CDN Profile SKU"
              }
            },
            "cdnEndpointName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "metadata": {
                "description": "CDN Endpoint name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location to deploy the resources"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            },
            "webAppName": {
              "type": "string",
              "metadata": {
                "description": "Web app to confire endpoint for"
              }
            },
            "webAppHostName": {
              "type": "string",
              "metadata": {
                "description": "Web app hostname to use in the endpoint"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Cdn/profiles",
              "apiVersion": "2024-02-01",
              "name": "[parameters('cdnProfileName')]",
              "location": "[parameters('location')]",
              "sku": "[parameters('cdnProfileSku')]"
            },
            {
              "type": "Microsoft.Cdn/profiles/endpoints",
              "apiVersion": "2024-02-01",
              "name": "[format('{0}/{1}', parameters('cdnProfileName'), parameters('cdnEndpointName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "isHttpAllowed": false,
                "isHttpsAllowed": true,
                "originHostHeader": "[parameters('webAppHostName')]",
                "origins": [
                  {
                    "name": "[parameters('webAppName')]",
                    "properties": {
                      "hostName": "[parameters('webAppHostName')]",
                      "httpPort": 80,
                      "httpsPort": 443
                    }
                  }
                ],
                "isCompressionEnabled": true,
                "contentTypesToCompress": [
                  "application/eot",
                  "application/font",
                  "application/font-sfnt",
                  "application/javascript",
                  "application/json",
                  "application/opentype",
                  "application/otf",
                  "application/pkcs7-mime",
                  "application/truetype",
                  "application/ttf",
                  "application/vnd.ms-fontobject",
                  "application/xhtml+xml",
                  "application/xml",
                  "application/xml+rss",
                  "application/x-font-opentype",
                  "application/x-font-truetype",
                  "application/x-font-ttf",
                  "application/x-httpd-cgi",
                  "application/x-javascript",
                  "application/x-mpegurl",
                  "application/x-opentype",
                  "application/x-otf",
                  "application/x-perl",
                  "application/x-ttf",
                  "font/eot",
                  "font/ttf",
                  "font/otf",
                  "font/opentype",
                  "image/svg+xml",
                  "text/css",
                  "text/csv",
                  "text/html",
                  "text/javascript",
                  "text/js",
                  "text/plain",
                  "text/richtext",
                  "text/tab-separated-values",
                  "text/xml",
                  "text/x-script",
                  "text/x-component",
                  "text/x-java-source"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('cdnProfileName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Cdn/profiles/{0}/endpoints/{1}', parameters('cdnProfileName'), parameters('cdnEndpointName'))]",
              "name": "CDNEndpointDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "logs": [
                  {
                    "category": "CoreAnalytics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('cdnProfileName'), parameters('cdnEndpointName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Cdn/profiles/{0}', parameters('cdnProfileName'))]",
              "name": "CDNProfileDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "AzureCdnAccessLog",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('cdnProfileName'))]"
              ]
            }
          ],
          "outputs": {
            "cdnEndpointHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles/endpoints', parameters('cdnProfileName'), parameters('cdnEndpointName')), '2024-02-01').hostName]"
            },
            "cdnEndpointOriginHostHeader": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cdn/profiles/endpoints', parameters('cdnProfileName'), parameters('cdnEndpointName')), '2024-02-01').originHostHeader]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webAppDeploy')]"
      ]
    },
    {
      "condition": "[equals(parameters('deploymentConfiguration'), 'Web app with Azure Front Door')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "FrontDoorDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "frontDoorName": {
            "value": "[variables('frontDoorName')]"
          },
          "wafPolicyName": {
            "value": "[variables('wafPolicyName')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[variables('logAnalyticsWorkspaceName')]"
          },
          "webAppName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "14278063683759801272"
            }
          },
          "parameters": {
            "frontDoorName": {
              "type": "string",
              "minLength": 5,
              "maxLength": 64
            },
            "wafPolicyName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace to use for diagnostics settings"
              }
            },
            "webAppName": {
              "type": "string",
              "metadata": {
                "description": "Web app to confire Front Door for"
              }
            }
          },
          "variables": {
            "backendPool1Name": "[format('{0}-backendPool1', parameters('frontDoorName'))]",
            "healthProbe1Name": "[format('{0}-healthProbe1', parameters('frontDoorName'))]",
            "frontendEndpoint1Name": "[format('{0}-frontendEndpoint1', parameters('frontDoorName'))]",
            "loadBalancing1Name": "[format('{0}-loadBalancing1', parameters('frontDoorName'))]",
            "routingRule1Name": "[format('{0}-routingRule1', parameters('frontDoorName'))]",
            "frontendEndpoint1hostName": "[format('{0}.azurefd.net', parameters('frontDoorName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/frontDoors",
              "apiVersion": "2021-06-01",
              "name": "[parameters('frontDoorName')]",
              "location": "global",
              "properties": {
                "routingRules": [
                  {
                    "name": "[variables('routingRule1Name')]",
                    "properties": {
                      "frontendEndpoints": [
                        {
                          "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), variables('frontendEndpoint1Name'))]"
                        }
                      ],
                      "acceptedProtocols": [
                        "Http",
                        "Https"
                      ],
                      "patternsToMatch": [
                        "/*"
                      ],
                      "routeConfiguration": {
                        "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                        "forwardingProtocol": "HttpsOnly",
                        "backendPool": {
                          "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), variables('backendPool1Name'))]"
                        },
                        "cacheConfiguration": {
                          "queryParameterStripDirective": "StripNone",
                          "dynamicCompression": "Enabled"
                        }
                      },
                      "enabledState": "Enabled"
                    }
                  }
                ],
                "healthProbeSettings": [
                  {
                    "name": "[variables('healthProbe1Name')]",
                    "properties": {
                      "path": "/",
                      "protocol": "Https",
                      "intervalInSeconds": 120
                    }
                  }
                ],
                "loadBalancingSettings": [
                  {
                    "name": "[variables('loadBalancing1Name')]",
                    "properties": {
                      "sampleSize": 4,
                      "successfulSamplesRequired": 2
                    }
                  }
                ],
                "backendPools": [
                  {
                    "name": "[variables('backendPool1Name')]",
                    "properties": {
                      "backends": [
                        {
                          "address": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2023-12-01').defaultHostName]",
                          "backendHostHeader": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2023-12-01').defaultHostName]",
                          "httpPort": 80,
                          "httpsPort": 443,
                          "weight": 50,
                          "priority": 1,
                          "enabledState": "Enabled"
                        }
                      ],
                      "loadBalancingSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), variables('loadBalancing1Name'))]"
                      },
                      "healthProbeSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), variables('healthProbe1Name'))]"
                      }
                    }
                  }
                ],
                "frontendEndpoints": [
                  {
                    "name": "[variables('frontendEndpoint1Name')]",
                    "properties": {
                      "hostName": "[variables('frontendEndpoint1hostName')]",
                      "sessionAffinityEnabledState": "Disabled",
                      "webApplicationFirewallPolicyLink": {
                        "id": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('wafPolicyName'))]"
                      }
                    }
                  }
                ],
                "enabledState": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('wafPolicyName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/frontDoors/{0}', parameters('frontDoorName'))]",
              "name": "FrontDoorDiagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "FrontdoorAccessLog",
                    "enabled": true
                  },
                  {
                    "category": "FrontdoorWebApplicationFirewallLog",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/frontDoors', parameters('frontDoorName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
              "apiVersion": "2024-02-01",
              "name": "[parameters('wafPolicyName')]",
              "location": "global",
              "properties": {
                "policySettings": {
                  "mode": "Prevention",
                  "enabledState": "Enabled"
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "Microsoft_DefaultRuleSet",
                      "ruleSetVersion": "1.1"
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "frontendEndpointHostName": {
              "type": "string",
              "value": "[variables('frontendEndpoint1hostName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webAppDeploy')]"
      ]
    }
  ],
  "outputs": {
    "webAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.name.value]"
    },
    "webAppPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.principalId.value]"
    },
    "webAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webAppDeploy'), '2022-09-01').outputs.hostName.value]"
    },
    "mySQLServerFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mySQLServerDeploy'), '2022-09-01').outputs.fullyQualifiedDomainName.value]"
    },
    "endpointHostName": {
      "type": "string",
      "value": "[if(equals(parameters('deploymentConfiguration'), 'Web app with Azure Front Door'), reference(resourceId('Microsoft.Resources/deployments', 'FrontDoorDeploy'), '2022-09-01').outputs.frontendEndpointHostName.value, reference(resourceId('Microsoft.Resources/deployments', 'cdnEndPointDeploy'), '2022-09-01').outputs.cdnEndpointHostName.value)]"
    }
  }
}